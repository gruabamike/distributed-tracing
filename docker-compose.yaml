version: '3.9'

services:
  api-orders:
    container_name: api-orders
    build:
      context: ./src
      dockerfile: Services/Orders.Api/Dockerfile
    ports:
      - "9001:80"
      - "9101:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - USERS_API_URI=http://api-users
      - INVENTORY_API_URI=http://api-inventory
      - BROKER_URI=activemq:tcp://active-mq:61616
      - ORDER_PROCESSING_QUEUE_NAME=OrderProcessing
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - ConnectionStrings:DefaultConnection=Server=db-sqlserver;Database=orderdb;User ID=SA;Password=P@ssw0rD;TrustServerCertificate=true
    depends_on:
      - otel-collector
      - db-sqlserver
      - active-mq

  api-users:
    container_name: api-users
    build:
      context: ./src
      dockerfile: Services/Users.Api/Dockerfile
    ports:
      - "9002:80"
      - "9102:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - ConnectionStrings:DefaultConnection=Server=db-sqlserver;Database=userdb;User ID=SA;Password=P@ssw0rD;TrustServerCertificate=true
    depends_on:
      - otel-collector
      - db-sqlserver
      - active-mq

  api-inventory:
    container_name: api-inventory
    build:
      context: ./src
      dockerfile: Services/Inventory.Api/Dockerfile
    ports:
      - "9003:80"
      - "9103:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
    depends_on:
      - otel-collector

  svc-fulfillment:
    container_name: svc-fulfillment
    build:
      context: ./src
      dockerfile: Services/Fulfillment/Dockerfile
    ports:
      - "9004:80"
      - "9104:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - BROKER_URI=activemq:tcp://active-mq:61616
      - ORDER_PROCESSING_QUEUE_NAME=OrderProcessing
      - NOTIFICATION_PROCESSING_QUEUE_NAME=NotificationProcessing
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
    depends_on:
      - otel-collector
      - active-mq
      - api-orders
      - api-users
      - api-inventory

  svc-notification:
    container_name: svc-notification
    build:
      context: ./src
      dockerfile: Services/Notification/Dockerfile
    ports:
      - "9005:80"
      - "9105:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - BROKER_URI=activemq:tcp://active-mq:61616
      - NOTIFICATION_PROCESSING_QUEUE_NAME=NotificationProcessing
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
    depends_on:
      - otel-collector
      - active-mq
      - api-orders
      - api-users
      - api-inventory

  active-mq:
    container_name: active-mq
    image: "rmohr/activemq:latest"
    ports:
      - 61616:61616 # JMS
      - 5672:5672   # AMQP
      - 8161:8161   # UI

  db-sqlserver:
    container_name: db-sqlserver
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    ports:
      - "1440:1433"
    environment:
      MSSQL_SA_PASSWORD: "P@ssw0rD"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - zipkin
      - prometheus

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "14250:14250"
      - "14268:14268"
      - "16686:16686"

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml  # the config file in container must have the file extension ".yml"
    ports:
      - "9090:9090"
